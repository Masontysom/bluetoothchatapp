// Generated by view binder compiler. Do not edit!
package com.bluetooth.communicatorexample.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import com.bluetooth.communicatorexample.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ComponentMessageReceivedBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final CardView card1;

  @NonNull
  public final LinearLayout senderContainer;

  @NonNull
  public final TextView textContent;

  @NonNull
  public final TextView textContent2;

  @NonNull
  public final TextView textSender;

  private ComponentMessageReceivedBinding(@NonNull RelativeLayout rootView, @NonNull CardView card1,
      @NonNull LinearLayout senderContainer, @NonNull TextView textContent,
      @NonNull TextView textContent2, @NonNull TextView textSender) {
    this.rootView = rootView;
    this.card1 = card1;
    this.senderContainer = senderContainer;
    this.textContent = textContent;
    this.textContent2 = textContent2;
    this.textSender = textSender;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ComponentMessageReceivedBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ComponentMessageReceivedBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.component_message_received, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ComponentMessageReceivedBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.card1;
      CardView card1 = rootView.findViewById(id);
      if (card1 == null) {
        break missingId;
      }

      id = R.id.sender_container;
      LinearLayout senderContainer = rootView.findViewById(id);
      if (senderContainer == null) {
        break missingId;
      }

      id = R.id.text_content;
      TextView textContent = rootView.findViewById(id);
      if (textContent == null) {
        break missingId;
      }

      id = R.id.text_content2;
      TextView textContent2 = rootView.findViewById(id);
      if (textContent2 == null) {
        break missingId;
      }

      id = R.id.text_sender;
      TextView textSender = rootView.findViewById(id);
      if (textSender == null) {
        break missingId;
      }

      return new ComponentMessageReceivedBinding((RelativeLayout) rootView, card1, senderContainer,
          textContent, textContent2, textSender);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
